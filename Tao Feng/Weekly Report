2019/03/20
Writing master academic dissertation,including 
  the review of open source ISA and RISC-V and the review of deep learning accelerator.
But I have no idea how I can write the paper for meeting the request of 30 thousands words.

2019/03/28
Continue writing master academic thesis,completing the main parts of it. 

2019/04/04
1.spent about two days to learn latex for writing easily.
2.spent about one day to daw some basic visio template of digital circuits。
3.spent about two days to learn axi protocol，but some topics like atomic access was not made sence by me。
4.spent about two days to desing the icb protocol to axi protocol convertor。Now I have finish the fifo using in it and drawing 
  the schematic of the convertor.
  
2019/04/11
1.spent about four days to finish the whole icb2axi protocol convertor including writing codes and drawing some schematic but without sufficient verification.
2.spent about three days to look up some paper's abstract for knowing what are others doing.
  ![screenshot](../cap1.png)
  
2019/04/12～2019/04/18
  2019.04.12:
    Write the directional verification plan of the icb2axi protocol convertor including simple test point decomposition.
    
2019/04/19～2019/04/25:
    1.Finish the soc side icb2axi protocol convertor verification.
    2.Finish icb2dla bus design and verification
    3.Clip dla codes. Finish the soc side. And still doing in ddr side. It's a little bit complex.
    4.Learn computer organization and design
    
    next week plan：
    1.Make the plan in detail of what I really need to do？（soc with coprocessor or soc with bus connecting IP. discuss with Haozhe Zhu).
      The plan should include the functional requirements and performance indicators of soc, the rationale and performance evaluation of 
      each ip, the design of the overall architecture, advantages, disadvantages and possible risks. Assess the feasibility of the plan 
      and whether the risks can be solved. First, do a good job of top-level design, then start the actual work.
    2.Research on collaboration with planning, performance analysis of IP.
    3.Learn computer organization and design。
    
 2019/04/26~2019/05/09:
    2019/04/26~2019/04/30
      1.Finish learning the basic knowledge of computer organization and design.
      2.Investigate and survey about the advantages and disadvantages of soc with coprocessor or soc with bus connecting IP.
        Then I make sure the solution of coprocessor is better than the solution of bus IP, and the advantages mainly include
        reduction memory access frequency therefor performance better and power consumption lower. But some challenges come 
        including cache coherence and complier with coprocessor instructions.
    2019/05/04~2019/05/09
      1.Find some materials of rocc, a coprocessor interface of RocketChip processor.
      2.Read some papers of rocc and some papers of DLA.
      3.Start learning of Chisel because rocc uses Chisel to design.
    
    Plan next week:
      1.Do sum research of rocc useage
      2.Try to assert the work load of a coprocessor
    
    2019/05/10~2019/05/17
      1.I want to design a coprocessor which can accelerate deep neural network also fit general matrix calculation. I nearly
        finish the design of the data flow of it in deep neural network(reduce mem access, utilize data reuse, etc.)(using visio). 
        And how to make it high efficiency and low power.
      2.Read papers of YOLOv1~v3
      
      Plan next week:
      1.Make the Spec of the coprocessor.
      2.Design the archietecture of the coprocessor.
      
    2019/05/18~2019/05/23
      1.Finish the draft of the archietecture of the coprocessor design.
      2.Read some matierals of yolo.
      
      plan next week:
      1.Design the circuits of each part of the coprocessor
      
      
    2019/05/24~2019/05/30
      1.Read more matierals of yolo v2.
      2.Read papers:
        Going deeper with embedded fpga platform for convolutional neural network,
        Learning both Weights and Connections for Efficient Neural Networks,
        A Scalable Sparse Matrix-Vector Multiplication Kernel for Energy-Efficient Sparse-Blas on FPGAs
    
    2019/06/03～2019/06/13
      1.Prepearations for CET6
      2.A brief look at some FPGA materials to make sure the resource for me to utilize
      
    2019/06/14~2019/06/16
      Take CET6
    2019/06/17~2019/06/19
      1.Read some articles of zynq7000 series and do some experiments to make sure the largest I/O bandwidth of it.
      2.Is reading some papers of DLA using FPGAs
      
    2019/06/20~2019/06/27
      1.Do some BIST with my new FPGA board which has a stronger zynq FPGA chip
      2.Read some materials of process-in-memory
      
    2019/06/28~2019/07/04

      Previous work this semester:

        1.Read papers about DLA architecture.
        2.Read materials about RISC-V.
        3.Figure out the arch and micro-arch of my DLA.
        4.Do some things with zynq.
        5.Learn some simple tips of linux driver.

      Next Plan:
      
        1.According to the previous knowledge, make a work as much solid as possible, 
           including system design, software and hardware division, the interface of each part, and the implementation of each part.
           At present, there are still many engineering problems that need to be solved
           
     2019/07/04~2019/07/11
        1.Run linux in my zynq FPGA
        2.A rough assessment of the resource utilization of the design
        3.Designed and roughly evaluated SOC architecture of my design
        4.Do some simulation of MIS
        Plan next week：
          1.Gradually refine the design documentation
          2.Start writing codes
          
          
     2019/08/08
        1.Talked to professor about that what I have been doing. Make sure I should write c model to verify dataflow of my desing.
        2.Took part in a conference of Chisel (CCC19) on Saturday and Sunday.
        3.Learn some important party of c programing language.
      To do list:
        1.Continue to learn c programing language.
        2.Read some papers of DLA.
        
     2019/08/15
        1.In-depth study of c pointer, basic completion of c language system learning.
        2.Learn some of the specifications and styles of the c code on the project. 
      To do list：
        1.Start to write c model for verifying the dataflow.
        
     2019/08/22
        1.Write c codes of read in picture of bmp format.
        2.Read the source codes of YOLO.
        3.Learn how to train a nerual net work but without practises.
      To do list:
        1.Continue writing c model.
     2019/08/29
        1.Learn somethings about training and back propagation algorithm
        2.Write input bmp picture pre-processing c codes
        3.Write c models
      Todo list：
        1.Try to realize back propagation algorithm with c codes
        
     2019/09/05
        1.Write a simple bp nn with c.
        2.Read c codes of YOLOv2, focus on weights loading blocks.
      Todo list:
        1.Read out floating weights and make quantization to 8 bits.
        
     2019/09/11
        1.Last week I didn't finish the work of weights loading block and quantization block，because I found the need to learn
          something of c++，so I focus on the study of cpp not 3-day mastering cpp
       Todo list：
        1.keep study c++ and use c++ to do the work of last week.
        
     2019/09/25
        1.write the code of reading weights and is debugging.
        2.take part in 2019 National Exhibition and Convention Center for two days.
        Todo list:
        1.finish the debugging
        2.write the detail design 
        
     2019/10/17
        1.build the testbench of my project.
        2.debug my testbench
        3.try to use a small module of my design to joint debug the whole enviroment.
        Todo list:
        1.try to make the whole working
        2.finish the spec of my project in detail. 
        
     2019/10/23
        1.investigated several open source mcu
        2.writing script for sythesis
        Todo list：
        1.to finish sythesis works
        2.to compare the difference among them
        3.to make decision which one we should use in the project
        
     2019/10/30
        1.synsithesed two kind of mcu with 100Mega Herts and 400Mega Herts seperately
        2.had compared timing, area and power(although not too accurate!)
        3.traced some critical paths, but more complicated than my thought!(spent too much time)
        4.writing a report of this experiment.
        Todo list:
        
     2019/11/06
        1.written the report of last week experiment
        2.finished the simulation of mcus
        3.doing some works of mcus' emulation
        4.trying to run memory compiler
        5.accessing to information on real-time operating systems

        Todo list:
        
     2019/11/13
        1.finished the emulation of mcus
        2.studying RTOS and accessing the information of hardware modules related to the project
        
        Todo list:
        
     2019/11/20
        1.Studying the work flows of RTOS and reading some kernel codes
        2.Trying the building flows of ARM and successfully porting RTOS on it, but the flows of RISC-V with something wrong
        
        Todo list:
        1.keep reading kernel codes
        2.try to run the flows of RISC-V
        
     2019/11/27
        1.read the codes of driver layer in RTOS architecture
        2.write the bottom driver of GPIOs but without combining with the top driver layer
        3.realized some ISRs
        
        Todo list：
        1.finish the codes of the GPIO driver
        2.finish the codes of the uart driver
        
     2019/12/04
        1.finish the define codes of the correspond hardware
        2.finish the coding of the uart driver in RTOS，now debugging
       
     2019/12/11
        1.finish the codes of the GPIO driver
        2.realized the APIs of being connected with UART driver and GPIO driver
        
        Todo list:
        to realize the interrupt lock.
        
     2019/12/18
        1.finished by using the cross compile tool chain for compiling some RTOSs.
        2.finished library, syntax and compilation warnings and errors debugging.
        3.completed the compilations of two RTOSs and resources usage seen my report.
        
        Todo list:
        to do function debugs in the board 
        
     2019/12/25
        1.finished the debug of GPIO driver and make a flash led demo using three threads.
        2.fixed the laptop of using in out public group meeting, replacing a hard disk and solve the problem of power manager which limits the frequency of its cpu.
        3.doing the demo UART driver and fixing some bugs.
        
        Todo list:
        to finish the debug of UART and make a demo of it
      
      2020/01/08
        1.built eclipse enviroment for rtthread
        2.making rtos small
        
        Todo list：
        1.some other potential bug？
        2.wifi
        
      2020/01/15
        1.surveyed the wifi schemes for rtos
        2.fixed a link bug of rtos
        
        Todo list：

      2020/02/12
        1.building the uvm verification platform for mcu
        2.RAL modeling for mcu

      2020/02/21
        1.debugging the uvm verification platform and fixed some problem
        2.made the decomposition of testpoint in peripherals
        
      2020/02/06
        1.fix some bugs of APB peripherals
        2.learn some concepts of AHB-APB transform bridge.
        
      2020/03/04
        1.designed a AHB-APB transform bridge.
        2.read some syn articles and optimized the synthesis of APB peripherals.

      2020/03/11
        1.writing graduation thesis.
        2.read some articles about dma.

      2020/03/18
        1.writing graduation thesis.
        2.do some more assertions on the uart ip.
        3.read more papers about dma.
